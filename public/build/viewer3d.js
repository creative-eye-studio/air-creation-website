(self["webpackChunk"] = self["webpackChunk"] || []).push([["viewer3d"],{

/***/ "./assets/viewer3d.js":
/*!****************************!*\
  !*** ./assets/viewer3d.js ***!
  \****************************/
/***/ (() => {

function viewer3D() {
  var canvas = document.querySelector('#product-3d-viewer');
  var renderer = new THREE.WebGLRenderer({
    canvas: canvas
  });
  var model3d = canvas.getAttribute('data-model');
  console.log(model3d);
  var fov = 150;
  var aspect = 2; // the canvas default

  var near = 0.;
  var far = 100;
  var camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
  camera.position.set(0, 0, 0);
  var controls = new THREE.OrbitControls(camera, canvas);
  controls.target.set(0, 0, 0);
  controls.update();
  var scene = new THREE.Scene();
  scene.background = new THREE.Color('darkgray');
  {
    var skyColor = 0xB1E1FF; // light blue

    var groundColor = 0xB97A20; // brownish orange

    var intensity = 1;
    var light = new THREE.HemisphereLight(skyColor, groundColor, intensity);
    scene.add(light);
  }
  {
    var color = 0xFFFFFF;
    var _intensity = 1;

    var _light = new THREE.DirectionalLight(color, _intensity);

    _light.position.set(0, 10, 0);

    _light.target.position.set(-5, 0, 0);

    scene.add(_light);
    scene.add(_light.target);
  }
  {
    var objLoader = new THREE.OBJLoader2();
    objLoader.load('../../uploads/3d-models/' + model3d, function (event) {
      var root = event.detail.loaderRootNode;
      scene.add(root);
    });
  }

  function resizeRendererToDisplaySize(renderer) {
    var canvas = renderer.domElement;
    var width = canvas.clientWidth;
    var height = canvas.clientHeight;
    var needResize = canvas.width !== width || canvas.height !== height;

    if (needResize) {
      renderer.setSize(width, height, false);
    }

    return needResize;
  }

  function render() {
    if (resizeRendererToDisplaySize(renderer)) {
      var _canvas = renderer.domElement;
      camera.aspect = _canvas.clientWidth / _canvas.clientHeight;
      camera.updateProjectionMatrix();
    }

    renderer.render(scene, camera);
    requestAnimationFrame(render);
  }

  requestAnimationFrame(render);
}

viewer3D();

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./assets/viewer3d.js"));
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld2VyM2QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxTQUFTQSxRQUFULEdBQW9CO0VBQ2hCLElBQU1DLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLG9CQUF2QixDQUFmO0VBQ0EsSUFBTUMsUUFBUSxHQUFHLElBQUlDLEtBQUssQ0FBQ0MsYUFBVixDQUF3QjtJQUFDTCxNQUFNLEVBQU5BO0VBQUQsQ0FBeEIsQ0FBakI7RUFDQSxJQUFNTSxPQUFPLEdBQUdOLE1BQU0sQ0FBQ08sWUFBUCxDQUFvQixZQUFwQixDQUFoQjtFQUNBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsT0FBWjtFQUVBLElBQU1JLEdBQUcsR0FBRyxHQUFaO0VBQ0EsSUFBTUMsTUFBTSxHQUFHLENBQWYsQ0FQZ0IsQ0FPRzs7RUFDbkIsSUFBTUMsSUFBSSxHQUFHLEVBQWI7RUFDQSxJQUFNQyxHQUFHLEdBQUcsR0FBWjtFQUNBLElBQU1DLE1BQU0sR0FBRyxJQUFJVixLQUFLLENBQUNXLGlCQUFWLENBQTRCTCxHQUE1QixFQUFpQ0MsTUFBakMsRUFBeUNDLElBQXpDLEVBQStDQyxHQUEvQyxDQUFmO0VBQ0FDLE1BQU0sQ0FBQ0UsUUFBUCxDQUFnQkMsR0FBaEIsQ0FBb0IsQ0FBcEIsRUFBdUIsQ0FBdkIsRUFBMEIsQ0FBMUI7RUFFQSxJQUFNQyxRQUFRLEdBQUcsSUFBSWQsS0FBSyxDQUFDZSxhQUFWLENBQXdCTCxNQUF4QixFQUFnQ2QsTUFBaEMsQ0FBakI7RUFDQWtCLFFBQVEsQ0FBQ0UsTUFBVCxDQUFnQkgsR0FBaEIsQ0FBb0IsQ0FBcEIsRUFBdUIsQ0FBdkIsRUFBMEIsQ0FBMUI7RUFDQUMsUUFBUSxDQUFDRyxNQUFUO0VBRUEsSUFBTUMsS0FBSyxHQUFHLElBQUlsQixLQUFLLENBQUNtQixLQUFWLEVBQWQ7RUFDQUQsS0FBSyxDQUFDRSxVQUFOLEdBQW1CLElBQUlwQixLQUFLLENBQUNxQixLQUFWLENBQWdCLFVBQWhCLENBQW5CO0VBRUE7SUFDSSxJQUFNQyxRQUFRLEdBQUcsUUFBakIsQ0FESixDQUNnQzs7SUFDNUIsSUFBTUMsV0FBVyxHQUFHLFFBQXBCLENBRkosQ0FFbUM7O0lBQy9CLElBQU1DLFNBQVMsR0FBRyxDQUFsQjtJQUNBLElBQU1DLEtBQUssR0FBRyxJQUFJekIsS0FBSyxDQUFDMEIsZUFBVixDQUEwQkosUUFBMUIsRUFBb0NDLFdBQXBDLEVBQWlEQyxTQUFqRCxDQUFkO0lBQ0FOLEtBQUssQ0FBQ1MsR0FBTixDQUFVRixLQUFWO0VBQ0g7RUFFRDtJQUNJLElBQU1HLEtBQUssR0FBRyxRQUFkO0lBQ0EsSUFBTUosVUFBUyxHQUFHLENBQWxCOztJQUNBLElBQU1DLE1BQUssR0FBRyxJQUFJekIsS0FBSyxDQUFDNkIsZ0JBQVYsQ0FBMkJELEtBQTNCLEVBQWtDSixVQUFsQyxDQUFkOztJQUNBQyxNQUFLLENBQUNiLFFBQU4sQ0FBZUMsR0FBZixDQUFtQixDQUFuQixFQUFzQixFQUF0QixFQUEwQixDQUExQjs7SUFDQVksTUFBSyxDQUFDVCxNQUFOLENBQWFKLFFBQWIsQ0FBc0JDLEdBQXRCLENBQTBCLENBQUMsQ0FBM0IsRUFBOEIsQ0FBOUIsRUFBaUMsQ0FBakM7O0lBQ0FLLEtBQUssQ0FBQ1MsR0FBTixDQUFVRixNQUFWO0lBQ0FQLEtBQUssQ0FBQ1MsR0FBTixDQUFVRixNQUFLLENBQUNULE1BQWhCO0VBQ0g7RUFFRDtJQUNJLElBQU1jLFNBQVMsR0FBRyxJQUFJOUIsS0FBSyxDQUFDK0IsVUFBVixFQUFsQjtJQUNBRCxTQUFTLENBQUNFLElBQVYsQ0FBZSw2QkFBNkI5QixPQUE1QyxFQUFxRCxVQUFDK0IsS0FBRCxFQUFXO01BQzVELElBQU1DLElBQUksR0FBR0QsS0FBSyxDQUFDRSxNQUFOLENBQWFDLGNBQTFCO01BQ0FsQixLQUFLLENBQUNTLEdBQU4sQ0FBVU8sSUFBVjtJQUNILENBSEQ7RUFJSDs7RUFFRCxTQUFTRywyQkFBVCxDQUFxQ3RDLFFBQXJDLEVBQStDO0lBQzNDLElBQU1ILE1BQU0sR0FBR0csUUFBUSxDQUFDdUMsVUFBeEI7SUFDQSxJQUFNQyxLQUFLLEdBQUczQyxNQUFNLENBQUM0QyxXQUFyQjtJQUNBLElBQU1DLE1BQU0sR0FBRzdDLE1BQU0sQ0FBQzhDLFlBQXRCO0lBQ0EsSUFBTUMsVUFBVSxHQUFHL0MsTUFBTSxDQUFDMkMsS0FBUCxLQUFrQkEsS0FBbEIsSUFBNEIzQyxNQUFNLENBQUM2QyxNQUFQLEtBQWtCQSxNQUFqRTs7SUFDQSxJQUFJRSxVQUFKLEVBQWdCO01BQ1o1QyxRQUFRLENBQUM2QyxPQUFULENBQWlCTCxLQUFqQixFQUF3QkUsTUFBeEIsRUFBZ0MsS0FBaEM7SUFDSDs7SUFDRCxPQUFPRSxVQUFQO0VBQ0g7O0VBRUQsU0FBU0UsTUFBVCxHQUFrQjtJQUNkLElBQUlSLDJCQUEyQixDQUFDdEMsUUFBRCxDQUEvQixFQUEyQztNQUN2QyxJQUFNSCxPQUFNLEdBQUdHLFFBQVEsQ0FBQ3VDLFVBQXhCO01BQ0E1QixNQUFNLENBQUNILE1BQVAsR0FBZ0JYLE9BQU0sQ0FBQzRDLFdBQVAsR0FBcUI1QyxPQUFNLENBQUM4QyxZQUE1QztNQUNBaEMsTUFBTSxDQUFDb0Msc0JBQVA7SUFDSDs7SUFDRC9DLFFBQVEsQ0FBQzhDLE1BQVQsQ0FBZ0IzQixLQUFoQixFQUF1QlIsTUFBdkI7SUFDQXFDLHFCQUFxQixDQUFDRixNQUFELENBQXJCO0VBQ0g7O0VBRURFLHFCQUFxQixDQUFDRixNQUFELENBQXJCO0FBQ0g7O0FBRURsRCxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3ZpZXdlcjNkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHZpZXdlcjNEKCkge1xuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9kdWN0LTNkLXZpZXdlcicpO1xuICAgIGNvbnN0IHJlbmRlcmVyID0gbmV3IFRIUkVFLldlYkdMUmVuZGVyZXIoe2NhbnZhc30pO1xuICAgIGNvbnN0IG1vZGVsM2QgPSBjYW52YXMuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGVsJyk7XG4gICAgY29uc29sZS5sb2cobW9kZWwzZCk7XG5cbiAgICBjb25zdCBmb3YgPSAxNTA7XG4gICAgY29uc3QgYXNwZWN0ID0gMjsgIC8vIHRoZSBjYW52YXMgZGVmYXVsdFxuICAgIGNvbnN0IG5lYXIgPSAwLjtcbiAgICBjb25zdCBmYXIgPSAxMDA7XG4gICAgY29uc3QgY2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKGZvdiwgYXNwZWN0LCBuZWFyLCBmYXIpO1xuICAgIGNhbWVyYS5wb3NpdGlvbi5zZXQoMCwgMCwgMCk7XG5cbiAgICBjb25zdCBjb250cm9scyA9IG5ldyBUSFJFRS5PcmJpdENvbnRyb2xzKGNhbWVyYSwgY2FudmFzKTtcbiAgICBjb250cm9scy50YXJnZXQuc2V0KDAsIDAsIDApO1xuICAgIGNvbnRyb2xzLnVwZGF0ZSgpO1xuXG4gICAgY29uc3Qgc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTtcbiAgICBzY2VuZS5iYWNrZ3JvdW5kID0gbmV3IFRIUkVFLkNvbG9yKCdkYXJrZ3JheScpO1xuXG4gICAge1xuICAgICAgICBjb25zdCBza3lDb2xvciA9IDB4QjFFMUZGOyAgLy8gbGlnaHQgYmx1ZVxuICAgICAgICBjb25zdCBncm91bmRDb2xvciA9IDB4Qjk3QTIwOyAgLy8gYnJvd25pc2ggb3JhbmdlXG4gICAgICAgIGNvbnN0IGludGVuc2l0eSA9IDE7XG4gICAgICAgIGNvbnN0IGxpZ2h0ID0gbmV3IFRIUkVFLkhlbWlzcGhlcmVMaWdodChza3lDb2xvciwgZ3JvdW5kQ29sb3IsIGludGVuc2l0eSk7XG4gICAgICAgIHNjZW5lLmFkZChsaWdodCk7XG4gICAgfVxuXG4gICAge1xuICAgICAgICBjb25zdCBjb2xvciA9IDB4RkZGRkZGO1xuICAgICAgICBjb25zdCBpbnRlbnNpdHkgPSAxO1xuICAgICAgICBjb25zdCBsaWdodCA9IG5ldyBUSFJFRS5EaXJlY3Rpb25hbExpZ2h0KGNvbG9yLCBpbnRlbnNpdHkpO1xuICAgICAgICBsaWdodC5wb3NpdGlvbi5zZXQoMCwgMTAsIDApO1xuICAgICAgICBsaWdodC50YXJnZXQucG9zaXRpb24uc2V0KC01LCAwLCAwKTtcbiAgICAgICAgc2NlbmUuYWRkKGxpZ2h0KTtcbiAgICAgICAgc2NlbmUuYWRkKGxpZ2h0LnRhcmdldCk7XG4gICAgfVxuXG4gICAge1xuICAgICAgICBjb25zdCBvYmpMb2FkZXIgPSBuZXcgVEhSRUUuT0JKTG9hZGVyMigpO1xuICAgICAgICBvYmpMb2FkZXIubG9hZCgnLi4vLi4vdXBsb2Fkcy8zZC1tb2RlbHMvJyArIG1vZGVsM2QsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgcm9vdCA9IGV2ZW50LmRldGFpbC5sb2FkZXJSb290Tm9kZTtcbiAgICAgICAgICAgIHNjZW5lLmFkZChyb290KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVzaXplUmVuZGVyZXJUb0Rpc3BsYXlTaXplKHJlbmRlcmVyKSB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHJlbmRlcmVyLmRvbUVsZW1lbnQ7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gY2FudmFzLmNsaWVudFdpZHRoO1xuICAgICAgICBjb25zdCBoZWlnaHQgPSBjYW52YXMuY2xpZW50SGVpZ2h0O1xuICAgICAgICBjb25zdCBuZWVkUmVzaXplID0gY2FudmFzLndpZHRoICE9PSAod2lkdGgpIHx8IGNhbnZhcy5oZWlnaHQgIT09IGhlaWdodDtcbiAgICAgICAgaWYgKG5lZWRSZXNpemUpIHtcbiAgICAgICAgICAgIHJlbmRlcmVyLnNldFNpemUod2lkdGgsIGhlaWdodCwgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZWVkUmVzaXplO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgaWYgKHJlc2l6ZVJlbmRlcmVyVG9EaXNwbGF5U2l6ZShyZW5kZXJlcikpIHtcbiAgICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IHJlbmRlcmVyLmRvbUVsZW1lbnQ7XG4gICAgICAgICAgICBjYW1lcmEuYXNwZWN0ID0gY2FudmFzLmNsaWVudFdpZHRoIC8gY2FudmFzLmNsaWVudEhlaWdodDtcbiAgICAgICAgICAgIGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmVuZGVyZXIucmVuZGVyKHNjZW5lLCBjYW1lcmEpO1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGVyKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGVyKTtcbn1cblxudmlld2VyM0QoKTsiXSwibmFtZXMiOlsidmlld2VyM0QiLCJjYW52YXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJyZW5kZXJlciIsIlRIUkVFIiwiV2ViR0xSZW5kZXJlciIsIm1vZGVsM2QiLCJnZXRBdHRyaWJ1dGUiLCJjb25zb2xlIiwibG9nIiwiZm92IiwiYXNwZWN0IiwibmVhciIsImZhciIsImNhbWVyYSIsIlBlcnNwZWN0aXZlQ2FtZXJhIiwicG9zaXRpb24iLCJzZXQiLCJjb250cm9scyIsIk9yYml0Q29udHJvbHMiLCJ0YXJnZXQiLCJ1cGRhdGUiLCJzY2VuZSIsIlNjZW5lIiwiYmFja2dyb3VuZCIsIkNvbG9yIiwic2t5Q29sb3IiLCJncm91bmRDb2xvciIsImludGVuc2l0eSIsImxpZ2h0IiwiSGVtaXNwaGVyZUxpZ2h0IiwiYWRkIiwiY29sb3IiLCJEaXJlY3Rpb25hbExpZ2h0Iiwib2JqTG9hZGVyIiwiT0JKTG9hZGVyMiIsImxvYWQiLCJldmVudCIsInJvb3QiLCJkZXRhaWwiLCJsb2FkZXJSb290Tm9kZSIsInJlc2l6ZVJlbmRlcmVyVG9EaXNwbGF5U2l6ZSIsImRvbUVsZW1lbnQiLCJ3aWR0aCIsImNsaWVudFdpZHRoIiwiaGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwibmVlZFJlc2l6ZSIsInNldFNpemUiLCJyZW5kZXIiLCJ1cGRhdGVQcm9qZWN0aW9uTWF0cml4IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==